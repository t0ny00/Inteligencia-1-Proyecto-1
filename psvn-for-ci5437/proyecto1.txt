---------------------------------------------------------------------------
Proyecto 1
---------------------------------------------------------------------------

Realizaremos varias actividades relacionadas con búsqueda heurística
sobre problemas estándar en el área.

---------------------------------------------------------------------------
Actividad 1
---------------------------------------------------------------------------

Compare los árboles de búsqueda que resultan de eliminación parcial
de duplicados utilizando autómatas de eliminación de ramas basados en
sufijos (soportado nativamente en PSVN), con sufijos de tamaño 0, 1 y 2.
Tamaño 0 corresponde al árbol de búsqueda completo.

Por ejemplo, para el 15-puzzle, obtenemos las siguiente tabla para el
número de nodos a cada profundidad del árbol de búsqueda:

-------------------------------------
Depth         N=0       N=1       N=2
-------------------------------------
    0           1         1         1
    1           2         2         2
    2           6         4         4
    3          18        10        10
    4          58        24        24
    5         186        54        54
    6         602       108       108
    7        1946       218       218
    8        6298       472       472
    9       20378      1030      1030
   10       65946      2204      2204
   11      213402      4666      4666
   12      690586      9880      9880
   13     2234778     21046     21046
   14     7231898     44972     44972
   15    23402906     95930     95930
   16    75733402    204216    204216
   17   245078426    434694    434694
   18                925980    925980
   19               1973338   1973338
   20               4204856   4204856
-------------------------------------

Genere tablas similares para los siguientes problemas hasta las
profundidades especificadas:

Pancake: 24 y 28 panquecas hasta profundidad 6
Puzzle: 11-puzzle (4x4) hasta profundidad 20
TopSpin: (compact encoding) 22-4 y 26-4 hasta profundidad 7
Tower of Hanoi: 14-4 y 16-4 hasta profundidad 12 y con prefijos N=0 y N=1


---------------------------------------------------------------------------
Actividad 2
---------------------------------------------------------------------------

Para cada problema y cada árbol de búsqueda generarado anteriormente, 
calcule el factor de ramificación empírico y la primera profundidad para
la cual el número de nodos a dicha profundidad supera el número de
estados en el problema.


---------------------------------------------------------------------------
Actividad 3
---------------------------------------------------------------------------

Implemente un algoritmo de búsqueda ciega y complejidad lineal en
espacio que opere sobre el mejor árbol de búsqueda encontrado en la
actividad anterior para cada problema. El algoritmo es evaluado en
un conjunto de instancias dadas. Cada archivo de instancias contienen
varios estados iniciales, uno por línea.

Lo único que nos interesa calcular es la distancia óptima al goal para
cada estado inicial provisto (i.e. no nos interesa calcular el camino
óptimo sino el costo de dicho camino).

Para cada instancia, ejecute el algoritmo por un máximo de 10 minutos y
genere una tabla de resultados en formato .csv que sea similar a la
siguiente:

grupo, algorithm, domain, instance, cost, generated, time, gen_per_sec
X, dfid, pancake16, "15 14 13 12 11 0 1 2 3 4 5 6 7 8 9 10", 2, 3333, 0.000167, 1.99581e+07
X, dfid, pancake16, "5 6 7 8 4 3 2 1 0 9 10 11 12 13 14 15", 2, 756, 3.90001e-05, 1.93846e+07
X, dfid, pancake16, "7 8 9 6 5 4 3 2 1 0 10 11 12 13 14 15", 2, 560, 2.9e-05, 1.93104e+07
X, dfid, pancake16, "7 8 9 10 11 12 6 5 4 3 2 1 0 13 14 15", 2, 1238, 6.4e-05, 1.93437e+07
X, dfid, pancake16, "10 9 8 0 1 2 3 4 5 6 7 11 12 13 14 15", 2, 2233, 0.000112, 1.99375e+07
X, dfid, pancake16, "1 2 3 4 5 6 7 8 9 10 11 12 13 0 14 15", 2, 2730, 0.000136, 2.00735e+07
X, dfid, pancake16, "15 0 14 4 11 6 5 3 1 7 8 12 13 2 10 9", na, na, na, na

La última linea refiere a una instancia que no se pudo solucionar en
el ejemplo se refiere a una instancia que no pudo ser solucionada
dentro de los límites de recursos previstos (i.e. 10 minutos).

Problemas:

Pancake: 16 panquecas
Puzzle: 11-puzzle
TopSpin: (compact encoding) 16-4 
Tower of Hanoi: 14-4


---------------------------------------------------------------------------
Actividad 4
---------------------------------------------------------------------------

Implemente A* y IDA* sobre el mejor árbol de búsqueda para resolver las
instancias provistas para cada problema.

Lo único que nos interesa calcular es la distancia óptima al goal para
cada instancia inicial provista (i.e. no nos interesa calcular el camino
óptimo sino el costo de dicho camino).

Para cada instancia, ejecute el algoritmo por un máximo de 10 minutos y
2gb de memoria RAM, y genere una tabla de resultados en formato .csv que
sea similar a la siguiente:

grupo, algorithm, heuristic, domain, instance, cost, h0, generated, time, gen_per_sec
X, ida, gap, pancake28, "5 6 10 11 14 12 13 18 17 16 15 3 0 1 2 26 25 24 23 4 19 9 8 7 20 21 22 27", 15, 12, 67724, 0.006441, 1.05145e+07
X, ida, gap, pancake28, "1 2 3 4 26 25 24 23 22 6 7 13 12 11 8 9 10 0 27 14 15 16 17 19 20 21 5 18", 12, 11, 1158, 0.000161, 7.19256e+06
X, ida, gap, pancake28, "5 11 10 27 26 12 13 23 19 4 3 18 9 8 7 22 20 21 14 15 16 17 25 24 0 1 2 6", 17, 15, 199297, 0.022753, 8.75915e+06
X, ida, gap, pancake28, "22 21 12 20 19 18 17 16 26 3 4 7 13 6 5 23 24 25 9 10 11 0 8 15 27 2 1 14", 18, 16, 75907, 0.007469, 1.01629e+07
X, ida, gap, pancake28, "4 5 6 7 9 8 26 11 12 13 20 19 3 2 18 17 15 1 0 27 21 22 23 24 25 16 10 14", 15, 14, 7540, 0.001095, 6.88584e+06
X, ida, gap, pancake28, "25 24 11 10 7 3 15 16 17 18 19 26 27 20 23 0 12 13 14 21 22 4 5 6 8 9 1 2", 15, 14, 999, 0.000112001, 8.91958e+06
X, ida, gap, pancake28, "0 1 8 7 6 15 14 12 27 26 25 16 24 23 22 10 11 17 18 9 20 21 19 13 5 4 3 2", 16, 14, 8058, 0.000796001, 1.01231e+07

Problemas:

Pancake: 28 panquecas con la heurística gap (ver paper)
Puzzle: 15-puzzle (instancias de Rich Korf con heuristica Manhattan y PDB 5+5+5)

Bonus: implementar PDB 5+5+5 tipo II (ver slides)
Bonus: implementar PDB y resolver *todas* las instancias de TopSpin16-4 y Tower14-4


---------------------------------------------------------------------------
Actividad 5
---------------------------------------------------------------------------

Implemente WIDA* para resolver las instancias provistas para cada
problema.

Lo único que nos interesa calcular es la distancia óptima al goal para
cada instancia inicial provista (i.e. no nos interesa calcular el camino
óptimo sino el costo de dicho camino).

Para cada instancia, ejecute el algoritmo por un máximo de 10 minutos y
2gb de memoria RAM, y genere una tabla de resultados en formato .csv que
sea similar a la siguiente:

algorithm, heuristic, weight, domain, instance, cost, h0, generated, time, gen_per_sec
X, wida, manhattan, 1.5, 15puzzle, "7 15 8 2 13 6 3 12 11 B 4 10 9 5 1 14", 57, 61, 125134, 0.007815, 1.6012e+07
X, wida, manhattan, 1.5, 15puzzle, "14 13 15 7 11 12 9 5 6 B 2 1 4 8 10 3", 59, 61, 1712699, 0.111838, 1.53141e+07
X, wida, manhattan, 1.5, 15puzzle, "13 5 4 10 9 12 8 14 2 3 7 1 B 15 11 6", 63, 64, 1360180, 0.093498, 1.45477e+07
X, wida, manhattan, 1.5, 15puzzle, "14 7 8 2 13 11 10 4 9 12 5 B 3 6 1 15", 61, 61, 8810821, 0.562566, 1.56618e+07
X, wida, manhattan, 1.5, 15puzzle, "5 12 10 7 15 11 14 B 8 2 1 13 3 4 9 6", 62, 63, 882593, 0.060257, 1.46472e+07
X, wida, manhattan, 1.5, 15puzzle, "4 7 14 13 10 3 9 12 11 5 6 15 1 2 8 B", 58, 63, 122275, 0.00785404, 1.55684e+07
X, wida, manhattan, 1.5, 15puzzle, "14 7 1 9 12 3 6 15 8 11 2 5 10 B 4 13", 58, 54, 577887, 0.037773, 1.52989e+07
X, wida, manhattan, 1.5, 15puzzle, "2 11 15 5 13 4 6 7 12 8 10 1 9 3 14 B", 54, 45, 1702784, 0.11122, 1.531e+07
X, wida, manhattan, 1.5, 15puzzle, "12 11 15 3 8 B 4 2 6 13 9 5 14 1 10 7", 54, 48, 1815418, 0.119533, 1.51876e+07
X, wida, manhattan, 1.5, 15puzzle, "3 14 9 11 5 4 8 2 13 12 6 7 10 1 15 B", 48, 48, 38057, 0.00224698, 1.6937e+07

Problemas:

Pancake: 28 panquecas con la heurística gap (ver paper)
Puzzle: 15-puzzle (instancias de Rich Korf con heuristica Manhattan y PDB 5+5+5)

Pesos: 1.5 y 2.0


---------------------------------------------------------------------------

